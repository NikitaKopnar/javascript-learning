javascript :
============================
- javascript is running on browsers
- for ex if we want to run javascript on chrome :
   open chrome -> inspect -> goto console -> write your javascript here and see output.
- alert ("hello World") -> This simply will open alert and show message.(_1.png)
- console.log("Hello World") -> This simply will print Hello world in browsers console.(_2.png)
- we can perform arithmetical operations directly in console.(_2.png)
- Javascript can be use in front end and at backend
- javascript is client side scripting language.
- Working of website : 
                         client req for the website
  web server           <-----------------------------     chrome
(processing)           ------------------------------>    (Client)
			             server returns the response
			              (HTML,CSS,Javascript)
						
-Javascipt which is often known as JS,is a high-level dynamic interpreted programming language.
-It allows client-side scripting to create completely dynamic web application and websites.
-Javascipt was initially designed for making pages "alive".
-Script can be executed in the browser itself.
-It can be executed on the browser as well as the server.
-we use javascript at backend with the help of nodeJs(If we want to run javascript outside browser).
-Javascipt is a safe language when used in browser.
-there are languages that get "transpiled" to Javascipt(coffiescript,Typescript).

-DOM Manipulation : We can change Html contents with the help of javascript.
ex. from code we will get firstcontainer ( _3.png )
-if we have more than 1 element which is having h1 we can simply write there 
  document.getElementsByTagName('h1')[0].style.fontSize = "99px"
  '99px' (_4.png)
  
  document.getElementsByTagName('h1')[0].style.fontSize = "9px"
  '9px' (_5.png)
  
-write your javascript before </body> it is recommended.

-Data type : At a very level,there are two types of data types in javascript
============
1.Primitve data type : undefined,null,number,string,boolean,symbol
2.Reference data type : Arrays and objects.

-javascript Variables : containers to store data value. 
======================
var : to create var in js
let : to create variable in scope,ex: if we create variable using let keyword inside function,then outside that function defined 
variable will not be accessible.by using let we can manage our memory.
const : keyword used to create constant,which value cannot be changed.
for ex: const ac=12 we have defined,and we are trying to ac++ then it will through error value assigning to const.

create variable of type : string,number,object,undefined,null
 ex: var number1=23;
     var str1="Javascript learning"
	 var marks={ ravi:100,nikita=100,neha=100.00}
	 var a=true;
-To see this values directly go in chrome browser and run in console like : console.log(number1) / console.log(str1) / console.log(marks)
output : _6.png
(we can print in program also) 
-undefined : if we create any var and not assigning any value to it then it is undefined.
ex.var und;
   it is of type undefined.
-array
========
  var arr=[1,2,"nikita",4,5]
  console.log(arr);
  
-javascript operators :
========================
Arithmetic,Assignment,comparison,Logical

-Javascipt function :  function function_name(param1,param2,param3..){statement n; return (value);}
======================

-conditionals : simple if-statement,if-else statement,else-if ladder statement
================

-loops : for, forEach : very imp loop under which we can iterate function , while , do-while :at least once do-while loop will get execute.
=========== if we create 2 array with same name and try to print then latest declared array will get printed.

-break and continue :   break : to stop iterating and exit from loop.
====================== 
continue : if we want to skip certain iteration
for ex : var arr = [1, 2, 3, 4, 5];
for(var i=0;i<arr.length;i++){
    if(i==2){
        continue;
    }
    console.log(arr[i]);
}
printing of value at array's 2nd location will be skip,rest of values will get printed.

-Array Methods :   
==================
console.log(myArr.length);//print length of array
myArr.pop();
console.log(myArr);//pop() applied,true will not print
myArr.push("Nikita");
console.log(myArr);//push() applied,append Nikita at end.
myArr.shift()
console.log(myArr);//shift(),will not print Fan,rest value will get printed.
myArr.unshift("Nikita");
console.log(myArr);//unshift(),will add Nitita at 0th index,and value will get printed.
console.log(myArr.toString());//all array value will get printed in string form, only null will not print.
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator

-string methods :    
===================
let str1="learning javascript";
console.log(str1.length);//length of string.
console.log(str1.indexOf("javascript"));//indexOf j will get printed.
fist occurence will get printed we can use lastIndexOf for last occurence.
console.log(str1.slice(0,3))//0 to 3-1=2 char will get printed. output:lea

-Dates :
============
let date=new Date();
console.log(date.getTime());//Gets the time value in milliseconds.
console.log(date.getFullYear());//Gets the year, using local time.
console.log(date.getDay());//Gets the day of the week, using local time.
console.log(date.getMinutes());//Gets the minutes of a Date object, using local time.
console.log(date.getHours());//Gets the hours in a date, using local time

-DOM Manipulation :        Document Object Model -> change html page contents dynamically.
=======================
goto console -> write document -> will give document i.e html page -> open -> will get entire code of html
goto console -> write document.location -> will give document location and many more objects.
					document.getElementById("btn").click()
					undefined
					document.getElementById('btn').style.border="blue"
					'blue'
					document.getElementById('btn').style.border="2px solid blue"
					'2px solid blue'
-we can use class = container at multiple place but id = one is unique.
https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction

-Events :          onclick(),window.onload,mouseevent - click,mouseover,mouseout,mouseup,mousedown etc..
===============

-Arrow function :  ex. General function we write : function sum(a,b){return a+b;}->goto console : write - sum(10,10).   
================== ex. syntax of arrow function : (param1,param2,param n)=>{ statement; }
                       
					   sum=(a,b)=>{ return a+b; }
					   goto console : type sum -> do enter -> will get (a,b)=>{ return a+b; } 
                                      type sum(10,20) -> will get 30(sum will be return).
									  
-setTimeout function :  syntax : setTimeout(function_name,time_in_millisecond);
======================= setTimeout funtion takes function as parameter,and time in miliseconds,afte that time period defined function will 
                        get executed.
						
						ex. log_time(){
						console.log("After 2 milliseconds , I am exceuted");
						}
						setTimeout(log_time,2000);
						
						OR
						===
						
						log_time=()=>{console.log("After 2 milliseconds , I am exceuted");}
		                setTimeout(log_time,2000);
						
-setInterval function :   syntax : setInterval(function_name,time_in_millisecond);
========================  setInterval function takes 2 paramaters like setTimeout.
                          Use : if we want to iterate function after certain time period then setInterval(log_time,2000);					
						  to stop setInterval() or setTimeout() method we can use clearInterval() or clearTimeout() respectively.

-localstorage :   The localStorage object allows you to save key/value pairs in the browser.
================  The localStorage object stores data with no expiration date.
                  The data is not deleted when the browser is closed, and are available for future sessions.
                  ex. goto console -> write localStorage -> will get storage values
				  we can set and get local storage
				  ex. goto console -> write localStorage.setItem("FirstName","Nikita") -> will set storage values
                  ex. goto console -> write localStorage.getItem("FirstName") -> will get Nikita in output.
                  We can clear localstorage using localStorage.clear().
				  We can remove single item from localStorage using localStorage.removeItem("name")

-typeof :   typeof use to get type.
==========  

-JSON :     javascript object notation.   
=========   data-interchange fomat.
                   ex. obj ={
                       name:"Nikita",
                       lastName:"Kopnar"
                     }
						jso=JSON.stringify(obj);
						console.log(typeof jso);
						console.log(jso);
						parsed=JSON.parse('{"name":"Nikita","lastName":"Kopnar","a":{"this":"that"}}')
                        console.log(parsed);
            output : string
                     {"name":"Nikita","lastName":"Kopnar"}
                     typeof jso
                     'string'
					 {
						"name": "Nikita",
						"lastName": "Kopnar",
						"a": {
							"this": "that"
						}
					}
					
IIFE function in JS :
========================
Immediately invoked function Expression.IIFE is a function in jS which immediately invoked and executed as soon as it is defined.

variables declared within the IIFE cannot be accessed by the outside world.

used for data privacy
ex : function() 
        {
		        document.write("Hello");
		}
      we can write this anonymous function as 
	  ( function()
	   {
              document.write("Hello")
       }
      )();
-we cannot call these functions.
-whenever these functions are defined these are called there only,no need to to specially call these functions.	  
===================================================================================================================================================
JS provides powerfull toolkit of different function.
Its powerfull programming language that can access and modify virtually any element on a web page.
We can add JS code in <script> tag 
  - In head section
  - In body section

Navigating to a url with a Button :
Open in new window :
<body>
<input type="button" name="register" id="reg" value=" Search Google" onclick="window.open('https://www.google.com','_blank')"/>
</body>

Alert :
alert("Hello world");
confirm :
confirm("Are you sure want to continue ?");

1.Introduction to JavaScript :
-It is a programming language used to create functionality in the web page.
-Functionality ==>> reading input -> performing the process -> providing the output.
-ex : Displaying menu when user clicks on menu icon.
-Html is markup language and js is programming language.main difference between markup language and programming language is : 
markup language includes only scripts and performing language have logic to execute.
-As it is a programming language,it provides all the programming concepts such as variables,data types,contol statements,operators,arrays,functions etc.
-JS is case sensitive language Ex : getElementsByClass - correct
                                    getelementsByClass - wrong
-The developer should follow uppercase and lowercase letters exactly.
-It is Object oriented programming language.
-It is developed by Netscape Corporation in 1996
-Syntax of javascript program :
 1.Embedded javascript or internal javascript ->With .html extension we have js and html code
                                                filename.html -> html code
								                javascript code
												Advantage : easy to understand
												            No confusion of multiple files
												Disadvantage : If code size is increases then it will create confusion.
												Conclusion : Suitable for practice time/learning time.
 2.External javascript : We always saparate fileS html and js.
                         filename.html -> html code
						 filename.js -> js code
						 We have to load js file into html 
						 
				-HTML code will be written in ".html file";JavaScript code will written in ".js file".
				-Advantage : even though the code increases, the developer can understand the code easily.
				             1 js file can be load into multiple html file.(re-usability).
				-Disadvange : No.of files will be increased.
Working with Internal JavaScript :
filename.html
1. :
    <head>
    <script>
           js code
    </script>
    </head>
	disadvantage : user will not see the output until the excution of both html and js code is finished 
2. : 
     <body>
	       content here 
		   <script>
		         jd code
		   </script>
	 </body>
     Advantage : User will see output, immediately after completion of execution of html code in <body>
	 
Output Statement in javascript :
-Purpose of output statement is to display some output value to user.
-"console.log()" is the output statement in js.
-syntax : console.log(value);
 Note : we have to see output in browser console,press F12 or right click in the web page,click on inspect element.
 
 Variables :
 -Named memory locationn in RAM ,purpose of variables is to store value.
           ---------
 -variable | value |   - variable's name cant be changed , variable value can be changed.
           ---------
		   Ex : x-10 we can't change variable name "x".
		   we can change value of "x" variable any no.of times and at any point of time.
		   var keyword to declare variable.Syntax : var variablename;
		   In js we can change variable data type and value,only name cannot be changed.
		   creation/Declaration of variables :
		       var variablename;
			   Note : "var" is a keyword,which is used to declare a variable.
			          When the variable is declared,memory will NOT be allocated.
					  When we assign the value,sufficient memory will be allocated.
					  In javascript, variable's "data type" can be changed.That means we can store any type of value in the variable.

2.Operators in javascript :
-Operator is a symbol to perform operation.
-Operands are the input values that we pass to the operator to perform operation.
-Types of operator:
 
 1.Arithmatical operator : + addition , - subtraction , * multiplication , / Divide , % remainder
 
 2.Assignment operator   : Used to assign value into variable.
                           = equal to (right value will copy to left side ), += add and assigns to, 
						   -=subtraction and assign to , *= multiply and assign to , 
						   /= divide and assign to , %= remainder and assign to
 
 3.Increment and Decrement operator : ++ +=1 (or) variable=variables+1, -- -=1 (or) variable=variables-1
 
 4.Relational operator   :  == equals (comparison) , != not equal , < less than , > greater than , <= less than or equal to , >= greater than or equal to.
 
 5.Logical operator      : If we need to check conditions we use logical operators.
                           && AND (Both conditions must be true)
						   || OR (at least any one condition should be true)
						   !  NOT (Given condition will be reverse)
 6.Concatenation operator : + used for concatination 
                            + is used to attach two strings(That means at the end of first string the second string will be added)
							number + number = addition
							string + number = concatenation
							number + string = concatenation
							string + string = concatenation 
							
3.JavaScript control statements : looping , if statements 
By default, all the statements executes in sequential order (top to bottom).
In order to change (control) the execution flow of the statements, we have to use control statements.
Types of control statements :
   1.Conditional control statements -> if and switch case
   2.Looping control statements -> while , do-while , for
    
      i> if : if you want to check condition first;and execute the statements only when the condition is TRUE;then use "if".
	     Types : if (Simple if ), if-else , else if , nested if 
		 
		        if (Simple if ) : Entry
				                 if(condition) - false
								       |
									  True
				                 {
								  Statements
								 }
								  Exit 
								  
	  ii> if-else : if(condition)
	                {
					 statement
					}
					else
					{
					 statement
					}
					
	 iii> else-if : n-number of alternate conditions checking
	                if -true
					{
					   statement -
					}
					else if (condition)
					{
					    statement
					}
					else if (condition)
					{
					   statements
					}
					else
					{
					    statements
					}
					
	  iv> Nested if : Inside if we have another if.
	                  if(condition)
		             {
					    statements
						if(condition)
						{
						  statements
						}
						statements -- Exit
		             }
	   Switch case :
	   ---------------
	   only one variable and multiple possibilities.
	   When you have one variable with many possibilities, use "switch case".
	   
	        Entry 
			   |
	   switch(variable)
	   {
	       case val1: ---------; break; -> exit
		   case val2: ---------; break;
		   case val3: ---------; break;
		   case val4: ---------; break;
		   case valn: ---------; break;
		   default:   ---------; break;
	   }
	   
	   Looping :
	   ---------
	   i> while :It is used to excecute the code repeatedly,while the condition is TRUE.
	             It checks the condition and execute the code;again it repeates the same process as-long-as the condition is TRUE.
				 Once the condition is false,it stops terminates (stops) the loop.
				 
				 loop entry :
				 while(condition)
				 {
				   Statements
				 }
				 loop exit
				 
	   ii> do-while : It is also same as "while" loop , to execute the code repeatedly as-long-as the condition is true.
           at least once this loop get execute.
            loop entry
			do
            {
			  statements
            }while(condition);		
			loop exit 
		
	  iii> "for" loop : It is also same as "while";but we will write the loop related statements(initialization,condition,and incrementation)in a single line;
	                    So that it will be easy to understand.
						Syntax : loop entry
						         for (initialization;condition;incrementation)
						         {
								    statements
								 }
								 loop exit
								 
4.Functions : Function is a collection of statements, to perform some specific operation (work).
              Syntax : function keyword is used to define any function.
			          
					function functionName(parameter 1,parameter 2,---,parameter n)
					{
					  statements
					  return (value);
                    }					
    "Arguments"-predefined variable : It is used to represent all the argument values that are received by the current function.
	It is a pre-defined variable that can be used only in the functions.
	arguments : Returns collection of all argument value.
	arguments[index] : Returns the single argument value based on given index.
	arguments.length : Count of argument values received.
	
     Recursion : function functionName()
	             {
				    if(condition)           A function calls itself.
					{
				      functionName();
					}
				 }
				 
				 ex: factorial
				 n=5
				 factorial of "n" 5*4*3*2*1
				 
				 factorial(n)
				 ==> factorial(5)
				 ==> factorial(5*factorial(4))
				 ==> factorial(5*4*factorial(3))
				 ==> factorial(5*4*3*factorial(2))
				 ==> factorial(5*4*3*2factorial(1))\
				 ==>factorial(5*4*3*2*1)
	
5.Object Oriented programming in javascript : Whenever a programming language depends the concepts of "Objects",it is called as "Object Oriented Programming(OOP)" language.
JavaScript is OOP language.

    What is object : A physical item that exits in the real world is called as "object".
	                 It may be a person/a thing.
					 Developers have to create the objects.
					 Object contains properties and methods inside an object.
					 We can create any no. of object inside the programs.
	What is property : Property is a detail about object.
	                   properties are stored inside the same object itself.
	What is method : Methods also called as "functions".
	                 Functions that are stored inside the object are called "methods".
			Example of car object :
			carno:1234                    start()
			carmodel:Vento                changeGear()
			carcolor:White                stop()
===============================================================================================================================================
